# Generated by Django 2.1.7 on 2019-03-03 08:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='campaigns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('status', models.CharField(max_length=100)),
                ('countries', models.CharField(max_length=200)),
                ('phase', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('platform', models.CharField(max_length=200)),
                ('jira', models.URLField(max_length=1000)),
                ('chart', models.URLField(max_length=1000)),
                ('perf', models.URLField(blank=True, max_length=1000, null=True)),
                ('monitor', models.URLField(blank=True, max_length=1000, null=True)),
                ('no_channels', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('no_comms', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('no_languages', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('no_dynamic_fields', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('no_query_attr', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('ops_hours', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('agency_hours', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('analytics_hours', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('timestamp_utc', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'campaigns',
            },
        ),
        migrations.CreateModel(
            name='categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=2000)),
                ('status', models.CharField(default='active', max_length=100)),
                ('timestamp_utc', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='timelines.campaigns')),
            ],
            options={
                'verbose_name_plural': 'comments',
            },
        ),
        migrations.CreateModel(
            name='complexities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'complexities',
            },
        ),
        migrations.CreateModel(
            name='countries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Historicalcampaigns',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('status', models.CharField(max_length=100)),
                ('countries', models.CharField(max_length=200)),
                ('phase', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('platform', models.CharField(max_length=200)),
                ('jira', models.URLField(max_length=1000)),
                ('chart', models.URLField(max_length=1000)),
                ('perf', models.URLField(blank=True, max_length=1000, null=True)),
                ('monitor', models.URLField(blank=True, max_length=1000, null=True)),
                ('no_channels', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('no_comms', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('no_languages', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('no_dynamic_fields', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('no_query_attr', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('ops_hours', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('agency_hours', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('analytics_hours', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('timestamp_utc', models.DateTimeField(default=django.utils.timezone.now)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical campaigns',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicalcategories',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical categories',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicalcomments',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.CharField(max_length=2000)),
                ('status', models.CharField(default='active', max_length=100)),
                ('timestamp_utc', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('campaign', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.campaigns')),
            ],
            options={
                'verbose_name': 'historical comments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicalcomplexities',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical complexities',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicalcountries',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical countries',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicalholidays',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date', models.DateField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical holidays',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicallinks',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('link', models.URLField(max_length=1000)),
                ('status', models.CharField(default='active', max_length=100)),
                ('timestamp_utc', models.DateTimeField(default=django.utils.timezone.now)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('campaign', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.campaigns')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical links',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicallocks',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('identifier', models.IntegerField()),
                ('status', models.CharField(max_length=100)),
                ('timestamp_utc', models.DateTimeField(default=django.utils.timezone.now)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical locks',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicalowners',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical owners',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicalplatforms',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical platforms',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicalprogress',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical progress',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicalregions',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical regions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicaltasks',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('status', models.CharField(default='active', max_length=100)),
                ('hours', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('timestamp_utc', models.DateTimeField(default=django.utils.timezone.now)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('campaign', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.campaigns')),
                ('category', models.ForeignKey(blank=True, db_constraint=False, default=1, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.categories')),
            ],
            options={
                'verbose_name': 'historical tasks',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicaltasks_comments',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.CharField(max_length=2000)),
                ('status', models.CharField(default='active', max_length=100)),
                ('timestamp_utc', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical tasks_comments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicaltasks_versions',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('status', models.CharField(default='active', max_length=100)),
                ('hours', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('timestamp_utc', models.DateTimeField(default=django.utils.timezone.now)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical tasks_versions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicalteams',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical teams',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicaltypes',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical types',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicalverticals',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical verticals',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicalweeks',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('no', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(54)])),
                ('ops_hours', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('ops_capacity', models.FloatField(default=15, validators=[django.core.validators.MinValueValidator(1)])),
                ('agency_hours', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('agency_capacity', models.FloatField(default=15, validators=[django.core.validators.MinValueValidator(1)])),
                ('analytics_hours', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('analytics_capacity', models.FloatField(default=15, validators=[django.core.validators.MinValueValidator(1)])),
                ('no_campaign', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('timestamp_utc', models.DateTimeField(default=django.utils.timezone.now)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical weeks',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='holidays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'holidays',
            },
        ),
        migrations.CreateModel(
            name='links',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('link', models.URLField(max_length=1000)),
                ('status', models.CharField(default='active', max_length=100)),
                ('timestamp_utc', models.DateTimeField(default=django.utils.timezone.now)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='timelines.campaigns')),
                ('last_edited_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='links_editor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'links',
            },
        ),
        migrations.CreateModel(
            name='locks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('identifier', models.IntegerField()),
                ('status', models.CharField(max_length=100)),
                ('timestamp_utc', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='locks_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'locks',
            },
        ),
        migrations.CreateModel(
            name='owners',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'owners',
            },
        ),
        migrations.CreateModel(
            name='platforms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'platforms',
            },
        ),
        migrations.CreateModel(
            name='progress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'progress',
            },
        ),
        migrations.CreateModel(
            name='regions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'region',
            },
        ),
        migrations.CreateModel(
            name='tasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('status', models.CharField(default='active', max_length=100)),
                ('hours', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('timestamp_utc', models.DateTimeField(default=django.utils.timezone.now)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='timelines.campaigns')),
                ('category', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='timelines.categories')),
                ('dependency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_dependencies', to='timelines.tasks')),
                ('last_edited_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tasks_editor', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timelines.owners')),
                ('progress', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timelines.progress')),
            ],
            options={
                'verbose_name_plural': 'tasks',
            },
        ),
        migrations.CreateModel(
            name='tasks_comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=2000)),
                ('status', models.CharField(default='active', max_length=100)),
                ('timestamp_utc', models.DateTimeField(auto_now=True)),
                ('commenter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tasks_comments_commenter', to='timelines.owners')),
                ('last_edited_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tasks_comments_editor', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_comments', to='timelines.tasks')),
            ],
            options={
                'verbose_name_plural': 'Task comments',
            },
        ),
        migrations.CreateModel(
            name='tasks_versions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('status', models.CharField(default='active', max_length=100)),
                ('hours', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('timestamp_utc', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_edited_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tasks_versions_editor', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timelines.owners')),
                ('progress', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timelines.progress')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_versions', to='timelines.tasks')),
            ],
            options={
                'verbose_name_plural': 'Tasks Versions',
            },
        ),
        migrations.CreateModel(
            name='teams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'teams',
            },
        ),
        migrations.CreateModel(
            name='types',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'types',
            },
        ),
        migrations.CreateModel(
            name='verticals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'verticals',
            },
        ),
        migrations.CreateModel(
            name='weeks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(54)])),
                ('ops_hours', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('ops_capacity', models.FloatField(default=15, validators=[django.core.validators.MinValueValidator(1)])),
                ('agency_hours', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('agency_capacity', models.FloatField(default=15, validators=[django.core.validators.MinValueValidator(1)])),
                ('analytics_hours', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('analytics_capacity', models.FloatField(default=15, validators=[django.core.validators.MinValueValidator(1)])),
                ('no_campaign', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('timestamp_utc', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_edited_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='weeks_editor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Resource Utilization',
            },
        ),
        migrations.AddField(
            model_name='owners',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='owners_team', to='timelines.teams'),
        ),
        migrations.AddField(
            model_name='owners',
            name='username',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='owners_username', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltasks_versions',
            name='owner',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.owners'),
        ),
        migrations.AddField(
            model_name='historicaltasks_versions',
            name='progress',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.progress'),
        ),
        migrations.AddField(
            model_name='historicaltasks_versions',
            name='task',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.tasks'),
        ),
        migrations.AddField(
            model_name='historicaltasks_comments',
            name='commenter',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.owners'),
        ),
        migrations.AddField(
            model_name='historicaltasks_comments',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltasks_comments',
            name='last_edited_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltasks_comments',
            name='task',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.tasks'),
        ),
        migrations.AddField(
            model_name='historicaltasks',
            name='dependency',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.tasks'),
        ),
        migrations.AddField(
            model_name='historicaltasks',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltasks',
            name='last_edited_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltasks',
            name='owner',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.owners'),
        ),
        migrations.AddField(
            model_name='historicaltasks',
            name='progress',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.progress'),
        ),
        migrations.AddField(
            model_name='historicalowners',
            name='team',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.teams'),
        ),
        migrations.AddField(
            model_name='historicalowners',
            name='username',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcomments',
            name='commenter',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.owners'),
        ),
        migrations.AddField(
            model_name='historicalcomments',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcomments',
            name='last_edited_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcampaigns',
            name='analytics_owner',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.owners'),
        ),
        migrations.AddField(
            model_name='historicalcampaigns',
            name='complexity',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.complexities'),
        ),
        migrations.AddField(
            model_name='historicalcampaigns',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcampaigns',
            name='last_edited_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcampaigns',
            name='lcm_owner',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.owners'),
        ),
        migrations.AddField(
            model_name='historicalcampaigns',
            name='ops_owner',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.owners'),
        ),
        migrations.AddField(
            model_name='historicalcampaigns',
            name='progress',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.progress'),
        ),
        migrations.AddField(
            model_name='historicalcampaigns',
            name='type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.types'),
        ),
        migrations.AddField(
            model_name='historicalcampaigns',
            name='vertical',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='timelines.verticals'),
        ),
        migrations.AddField(
            model_name='comments',
            name='commenter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comments_commenter', to='timelines.owners'),
        ),
        migrations.AddField(
            model_name='comments',
            name='last_edited_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='campaigns',
            name='analytics_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='campaigns_analytics', to='timelines.owners'),
        ),
        migrations.AddField(
            model_name='campaigns',
            name='complexity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timelines.complexities'),
        ),
        migrations.AddField(
            model_name='campaigns',
            name='last_edited_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='campaigns_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='campaigns',
            name='lcm_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='campaigns_lcm', to='timelines.owners'),
        ),
        migrations.AddField(
            model_name='campaigns',
            name='ops_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='campaigns_ops', to='timelines.owners'),
        ),
        migrations.AddField(
            model_name='campaigns',
            name='progress',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timelines.progress'),
        ),
        migrations.AddField(
            model_name='campaigns',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timelines.types'),
        ),
        migrations.AddField(
            model_name='campaigns',
            name='vertical',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timelines.verticals'),
        ),
    ]
